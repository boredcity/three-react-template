/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { useGLTF } from '@react-three/drei';
import { Mesh, MeshStandardMaterial } from 'three';
import { GLTF } from 'three-stdlib';

type GLTFResult = GLTF & {
    nodes: {
        bottomBun: Mesh;
        meat: Mesh;
        cheese: Mesh;
        topBun: Mesh;
    };
    materials: {
        BunMaterial: MeshStandardMaterial;
        SteakMaterial: MeshStandardMaterial;
        CheeseMaterial: MeshStandardMaterial;
    };
};

export function TestJSXModel(props: JSX.IntrinsicElements['group']) {
    const { nodes, materials } = useGLTF(
        '/testModel/TestModel.glb'
    ) as GLTFResult;
    return (
        <group {...props} dispose={null}>
            <mesh
                name="bottomBun"
                castShadow
                receiveShadow
                geometry={nodes.bottomBun.geometry}
                material={materials.BunMaterial}
            />
            <mesh
                name="meat"
                castShadow
                receiveShadow
                geometry={nodes.meat.geometry}
                material={materials.SteakMaterial}
                position={[0, 2.8, 0]}
            />
            <mesh
                name="cheese"
                castShadow
                receiveShadow
                geometry={nodes.cheese.geometry}
                material={materials.CheeseMaterial}
                position={[0, 3, 0]}
            />
            <mesh
                name="topBun"
                rotation-x={Math.PI}
                castShadow
                receiveShadow
                geometry={nodes.topBun.geometry}
                material={materials.BunMaterial}
                position={[0, 6, 0]}
            />
        </group>
    );
}

useGLTF.preload('/testModel/TestModel.glb');
